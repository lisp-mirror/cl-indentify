(in-package :cl-indentify)

(defparameter +default-indent-templates+
  '((assert 2)
    (asdf:defsystem 1)
    (block 0)
    (case 1 nil (0))
    (ccase 1 nil (0))
    (cond 0 nil (0))
    (ctypecase 1 nil (0))
    (decf 1)
    (defclass 2)
    (defconstant 1)
    (defgeneric 2)
    (define-compiler-macro 2)
    (define-condition 1)
    (define-method-combination 2)
    (define-modify-macro 2)
    (define-setf-expander 2)
    (define-symbol-macro 2)
    (defmacro 2)
    (defmethod 2)
    (defpackage 1 nil (0))
    (defparameter 1)
    (defsetf 2)
    (defstruct 1)
    (deftype 1)
    (defun 2)
    (defvar 1)
    (destructuring-bind 2)
    (do 2)
    (do* 2)
    (do-all-symbols 1)
    (do-external-symbols 1)
    (dolist 1)
    (do-symbols 1)
    (dotimes 1)
    (ecase 1 nil (0))
    (etypecase 1 nil (0))
    (eval-when 1)
    (flet 1)
    (handler-bind 0)
    (handler-case 1 nil (1))
    (if 1)
    (incf 1)
    (labels 1)
    (lambda 1)
    (let 1)
    (let* 1)
    (let-values 1)
    (loop 0)
    (macrolet 1)
    (multiple-value-bind 2)
    (prog1 1)
    (setf 1)
    (typecase 1 nil (0))
    (unless 1)
    (unwind-protect 1)
    (when 1)
    (with-input-from-string 1)
    (with-open-file 1)
    (with-open-socket 1)
    (with-open-stream 1)
    (with-output-to-string 1)
    (with-slots 2)))


